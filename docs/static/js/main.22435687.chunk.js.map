{"version":3,"sources":["PersonSelect/PersonSelect.js","IDInput/IDInput.js","NiceDate/NiceDate.js","LetterList/LetterListRow/LetterListRow.js","LetterList/LetterList.js","LetterList/LetterListWrapper.js","People/Person/Person.js","People/Group/Group.js","Letter/LetterVersion/LetterVersion.js","Letter/References/References.js","Letter/Letter.js","Submit/Submit.js","People/Biography/Biography.js","App.js","registerServiceWorker.js","index.js"],"names":["PersonSelect","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlePersonChange","selectedOption","setState","onPersonChange","handleOnlineStatusChange","online","onOnlineStatusChange","state","people","placeholder","bind","assertThisInitialized","_this2","fetch","then","response","status","json","data","catch","err","console","error","Error","options","value","massObject","sortedPeople","entries","sort","a","b","x","Name","toLowerCase","y","i","length","key","personName","replace","push","label","react_default","createElement","className","htmlFor","react_select_es","name","id","onChange","React","Component","IDInput","isActive","handleLetterIDChange","handleKeyboardEvent","e","onLetterIDChange","target","onKeyboardEvent","type","letterID","min","max","maxLength","onKeyDown","NiceDate","date","format","niceDate","dateParts","split","validDateParts","dateOptions","defaultDateFormat","year","month","day","weekday","dateComment","unknownDate","forEach","index","test","slice","toString","dateTimeFormat","Intl","DateTimeFormat","Date","parse","join","dateTime","LetterListRow","_this$props","letterRow","selected","onClick","src_NiceDate_NiceDate","GetLetterList","history","location","pathname","concat","rows","_i","_Object$entries","list","_ref3","_ref2","slicedToArray","letterHeader","Number","isInteger","parseInt","LetterList_LetterListRow_LetterListRow","ID","letterAmount","tabIndex","role","aria-labelledby","connect","letterListFetch","url","headers","Content-Type","pending","rejected","fulfilled","LetterList_GetLetterList","LetterListWrapper","_match$params","match","params","person","instructions","src_LetterList_LetterList","Person","personID","firstName","lastName","fullName","dangerouslySetInnerHTML","__html","Group","correspondent","group","preposition","groupElement","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","Webpage","Route","path","render","People_Person_Person","assign","_iterator","Symbol","iterator","next","done","return","pop","groupClass","LetterVersion","version","updated","numberOfVersions","numberofversions","number","content","Public","Text","versionHeader","meta","language","Languages","ISOMap","eng","dut","fre","spa","ger","ita","swe","dan","hca","RegExp","keys","lang","matched","letterClasses","References","references","reference","itemTitle","URL","itemNotes","href","DisplayLetter","letterDrawerIsOpen","letter","open","senders","Senders","receivers","Receivers","letterDate","versions","Versions","letterContent","text","original","image","other","People_Group_Group","Type","_ref","Letter_LetterVersion_LetterVersion","onClickCapture","Letter_References_References","Letter","_this$props2","Letter_DisplayLetter","Submit","handleClickSubmit","disabled","PersonMetaData","info","bio","_infoKeys","timeAndNationality","Biography_PersonMetaData","HCALetterApp","letterIDButtonIsActive","onlineStatus","letterInPath","pathExtension","datePart","pathParts","pathPart","pathArray","_Object$values","values","arguments","keyBoardEvent","_this$state","personValue","esm","defaultFocus","defaultIndex","src_PersonSelect_PersonSelect","exact","style","textAlign","hrefLang","children","src_IDInput_IDInput","src_Submit_Submit","src_Letter_Letter","component","Biography","Switch","LetterList_LetterListWrapper","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","supportsHistory","ReactDOM","BrowserRouter","basename","forceRefresh","document","getElementById","process","origin","addEventListener","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.22435687.chunk.js","sourcesContent":["import React from \"react\";\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.css';\n\n\nclass PersonSelect extends React.Component {\n\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      selectedOption: '',\n      people: {},\n      placeholder: 'Loading persons...'\n    };\n\n    this.handlePersonChange = this.handlePersonChange.bind(this);\n    this.handleOnlineStatusChange = this.handleOnlineStatusChange.bind(this);\n  }\n\n  // Lifecycle hook\n  componentDidMount() {\n    /**\n     * Fetch all persons from the web service when the component mounts.\n     */\n    fetch('https://andersen.sdu.dk/service/people')\n      .then(response => {\n        if (response.status === 200) {\n          // if 200 ok\n          return response.json()\n            .then(data => {\n              this.setState({ people: data, placeholder: 'Please select a person...' });\n            })\n            .catch(err => {\n              console.error('An error occurred', err);\n            });\n        }\n        else {\n          throw new Error('Something went wrong on the API server');\n        }\n      })\n      .catch(err => {\n        console.error(err);\n        // Set app online status to 'offline' via a callback function\n        this.handleOnlineStatusChange('offline');\n      });\n  }\n\n\n  handlePersonChange = (selectedOption) => {\n    this.setState({ selectedOption });\n    this.props.onPersonChange(selectedOption);\n  };\n\n  handleOnlineStatusChange = (online) => {\n    this.props.onOnlineStatusChange(online);\n  };\n\n  render() {\n    const options = [];\n    const { selectedOption } = this.state;\n    const value = selectedOption && selectedOption.value;\n    const massObject = this.state.people;\n    const peopleArray = Object.entries(massObject);\n    const sortedPeople = peopleArray.sort((a, b) => {\n      let x = a[1].Name.toLowerCase();\n      let y = b[1].Name.toLowerCase();\n      if (x < y) {return -1;}\n      if (x > y) {return 1;}\n      return 0;\n    });\n\n    for (let i=0; i<sortedPeople.length; i++) {\n      let key = sortedPeople[i][0];\n      let person = sortedPeople[i][1];\n      /**\n       * Remove first occurrence of comma. That is necessary due to a data\n       * formatting issue in the web service\n       */\n      let personName = person.Name.replace(/,/, '');\n      options.push ({\n        value: key,\n        label: personName\n      });\n    }\n\n    return (\n      <div className=\"person-selection label-input\">\n        <label htmlFor=\"select-person\">Sender / receiver</label>\n        <Select\n          name=\"select-person\"\n          id=\"select-person\"\n          placeholder={this.state.placeholder}\n          value={value}\n          onChange={this.handlePersonChange}\n          options={options}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PersonSelect;","import React from 'react';\n\nclass IDInput extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isActive: false\n    };\n    this.handleLetterIDChange = this.handleLetterIDChange.bind(this);\n    this.handleKeyboardEvent = this.handleKeyboardEvent.bind(this);\n  }\n\n  handleLetterIDChange(e) {\n    this.props.onLetterIDChange(e.target.value, false);\n  }\n\n  handleKeyboardEvent(e) {\n    this.props.onKeyboardEvent(e.key);\n  }\n\n  render() {\n    return (\n      <div className=\"id-input label-input\">\n        <label htmlFor=\"id-input\">Letter ID</label>\n        {\" \"}\n        <input\n          type=\"number\"\n          id=\"id-input\"\n          placeholder={this.props.letterID}\n          min=\"1\"\n          max=\"99999\"\n          maxLength=\"5\"\n          onChange={this.handleLetterIDChange}\n          onKeyDown={this.handleKeyboardEvent}\n        />\n      </div>\n    );\n  }\n}\n\nexport default IDInput;","import React from \"react\";\n\nclass NiceDate extends React.Component {\n  render() {\n    const date = this.props.date;\n    const format = this.props.format;\n    let niceDate = 'Invalid date';\n    /**\n     * The dates are not always valid. In fact, the format has been hacked\n     * in order to be able to represent unknown data with naughts (year, month\n     * and/or day). Examples: 0000-12-24 for Dec 24 in an unknown year,\n     * 1827-08-00 for an unknown date in 1827. So we will take the date apart.\n     */\n    let dateParts = date.split('-');\n    let validDateParts = [true, true, true];\n    let dateOptions = {};\n    const defaultDateFormat = format === 'compact'\n      ? { year: 'numeric', month: 'numeric', day: 'numeric' }\n      : { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    let dateComment = '';\n    let unknownDate = false;\n\n    dateParts.forEach((value, index) => {\n      // If the date part consists of 0's only\n      if (/^0+$/.test(value)) {\n        // Replace the first 0 with a 1 in order to be able to Date() it\n        dateParts = dateParts.slice(0);\n        dateParts[index] = value.replace(/0/,'1');\n        validDateParts[index] = false;\n      }\n    });\n\n    validDateParts = validDateParts.toString();\n\n    switch (validDateParts) {\n      case 'true,true,true':\n        // Complete, valid date\n        dateOptions = defaultDateFormat;\n        break;\n      case 'true,true,false':\n        dateOptions = { year: 'numeric', month: 'long' };\n        dateComment = 'unknown day';\n        break;\n      case 'true,false,true':\n        dateOptions = { year: 'numeric', day: 'numeric' };\n        dateComment = 'unknown month';\n        break;\n      case 'true,false,false':\n        dateOptions = { year: 'numeric' };\n        dateComment = 'month and day are unknown';\n        break;\n      case 'false,true,true':\n        dateOptions = { month: 'long', day: 'numeric' };\n        dateComment = 'unknown year';\n        break;\n      case 'false,false,true':\n        dateOptions = { day: 'numeric' };\n        dateComment = 'year and month are unknown';\n        break;\n      case 'false,true,false':\n        dateOptions = { month: 'long' };\n        dateComment = 'year and day are unknown';\n        break;\n      case 'false,false,false':\n        unknownDate = true;\n        break;\n      default:\n        dateOptions = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    }\n\n    /**\n     * Now that we have got the date formatting options, we create a date\n     * formatter. It should perform better than toLocaleDateString(),\n     * especially when many dates need to be formatted.\n     * `navigator.languages[0]` returns the user's top priority browser\n     * language, but for now, I will just use `en-EN` as first argument.\n     * Localized dates in a non-localized context look odd.\n     */\n    const dateTimeFormat = new Intl.DateTimeFormat('en-EN', dateOptions);\n\n    // If the date is not entirely unknown\n    if (!unknownDate) {\n      /**\n       * Todo:\n       * JS dates and timezones is an interesting subject. The following code\n       * works, but it may, due to timezone issues, return a date that is one\n       * day too early. The current code works in my timezone, UTC+1:00, but it\n       * should be tested further with/in other timezones.\n       */\n      // If the date format is valid (the data source contains invalid values).\n      if (Date.parse(dateParts.join('-'))) {\n        niceDate = dateTimeFormat.format(new Date(dateParts.join('-')));\n      }\n      else {\n        niceDate = date;\n        dateComment = 'Invalid date in the data source';\n      }\n\n      if (format !== 'compact') {\n        niceDate += dateComment ? ' (' + dateComment + ')' : '';\n      }\n    }\n    else {\n      niceDate = '(unknown date)';\n    }\n\n    return (\n      <time dateTime={date}>{niceDate}</time>\n    );\n  }\n}\n\nexport default NiceDate;","import React from \"react\";\nimport NiceDate from '../../NiceDate/NiceDate';\n\nclass LetterListRow extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleLetterIDChange = this.handleLetterIDChange.bind(this);\n  }\n\n  handleLetterIDChange(letterID) {\n    this.props.onLetterIDChange(letterID);\n  }\n\n  render() {\n    const  { letterRow, selected } = this.props;\n    return (\n      <tr className={selected ? 'letterlist-row selected': 'letterlist-row'} onClick={() => { this.handleLetterIDChange(letterRow['ID']) }}>\n        <td className=\"sender\">{letterRow['Sender name']}</td>\n        <td className=\"receiver\">{letterRow['Receiver name']}</td>\n        <td className=\"date\"><NiceDate date={letterRow.Date} /></td>\n      </tr>\n    );\n  };\n}\n\nexport default LetterListRow;","import React from 'react';\nimport LetterListRow from '../LetterList/LetterListRow/LetterListRow';\nimport { connect } from 'react-refetch';\n// import Error from '../Error/Error';\n\nclass GetLetterList extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      letterID: ''\n    };\n\n    this.handleLetterIDChange = this.handleLetterIDChange.bind(this);\n  }\n\n  handleLetterIDChange(letterID) {\n    this.setState({\n      letterID: letterID\n    });\n\n    this.props.onLetterIDChange(letterID);\n\n    /**\n     * Add or replace the letterID in the path\n     */\n    // If there is already a letter in the path\n    if (/\\/letter\\/([0-9]+)/.test(this.props.history.location.pathname)) {\n      // Replace the letter/ID\n      this.props.history.push(this.props.history.location.pathname.replace(/\\/letter\\/[0-9]+.*/, `/letter/${letterID}`));\n    }\n    else {\n      // Append letter/ID to the path\n      this.props.history.push(`${this.props.history.location.pathname}/letter/${letterID}`);\n    }\n  }\n\n  render() {\n\n    const rows = [];\n\n    for (let [key, letterHeader] of Object.entries(this.props.list)){\n      // Filter out web service metadata entries\n      if(Number.isInteger(parseInt(key, 10))) {\n        // Add letters to the list\n        rows.push(\n          <LetterListRow\n            key={letterHeader.ID}\n            letterRow={letterHeader}\n            onLetterIDChange={this.handleLetterIDChange}\n            selected={ letterHeader.ID === this.state.letterID }\n          />\n        );\n      }\n    }\n\n    const letterAmount = rows.length;\n    const classes = [\n      // Base CSS class\n      'letterlist'\n    ];\n\n    return (\n      <table className={classes.join(' ')}>\n        <caption id=\"letterlist\">{letterAmount} {letterAmount > 1 ? 'letters' : 'letter' } found:</caption>\n        <thead>\n        <tr>\n          <th>From</th>\n          <th>To</th>\n          <th>On</th>\n        </tr>\n        </thead>\n        <tbody tabIndex=\"0\" role=\"list\" aria-labelledby=\"letterlist\">\n        {rows}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst LetterList = (props) => {\n  const { letterListFetch } = props;\n\n  if (letterListFetch.pending) {\n    return <p className=\"fetch-message\">Fetching a list of letters. Please wait...</p>\n  } else if (letterListFetch.rejected || (letterListFetch.fulfilled && letterListFetch.value === null)) {\n    // return <Error error={letterListFetch.reason} />\n    return <p className=\"fetch-message\">No letters found with the given parameters.</p>\n  } else if (letterListFetch.fulfilled && letterListFetch.value !== null) {\n    return <GetLetterList list={letterListFetch.value} history={props.history} letterID={props.letterID} onLetterIDChange={props.onLetterIDChange} />\n  }\n};\n\nexport default connect(props => ({\n  onLetterIDChange: props.onLetterIDChange,\n  letterListFetch: {\n    url: `${props.url}`,\n    headers: {\n      'Content-Type': ''\n    }\n  }\n}))(LetterList)\n","import React, {Component} from 'react';\nimport LetterList from './LetterList';\n\nclass LetterListWrapper extends Component {\n\n  constructor(){\n    super();\n\n    this.handleLetterIDChange = this.handleLetterIDChange.bind(this);\n  }\n\n  handleLetterIDChange(letterID) {\n    this.props.onLetterIDChange(letterID);\n  }\n\n  render() {\n    const { history, match } = this.props;\n    const { person, year, month, day } = match.params;\n    let url = 'https://andersen.sdu.dk/service/letters/';\n    let instructions = 'Not enough parameters. Please select at least a year and a month.';\n\n    if (person) {\n      // If a person is selected\n      if (person !== '1') {\n        // and it is not Hans Christian Andersen (= loading almost all letters)\n        url += `person/${person}`;\n      }\n      else {\n        url = null;\n        instructions = 'Loading all letters to and from Hans Christian Andersen would mean loading almost all letters in the database. It does not make sense, and it puts a large load on your device. So the app does not do that. Please select someone else.'\n      }\n    }\n    else {\n      // If a year and a month are selected. Year only returns (too) many letters\n      if ((year) && (month)) {\n        url += `date/${('0000'+year).slice(-4)}-${('00'+month).slice(-2)}`;\n\n        if (day) {\n          // If there is also provided a day\n          url += `-${('00'+day).slice(-2)}`;\n        }\n      }\n      else {\n        // No year and month.\n        url = null;\n      }\n    }\n\n    if (url !== null) {\n      // If there is a web service URL to be fetched\n      return (\n        <LetterList url={url} history={history} onLetterIDChange={this.handleLetterIDChange} />\n      );\n    }\n    else {\n      // No web service URL\n      return (\n        <p className=\"fetch-message\">{instructions}</p>\n      );\n    }\n  }\n}\n\nexport default LetterListWrapper;","import React from \"react\";\n\nclass Person extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.handlePersonChange = this.handlePersonChange.bind(this);\n  }\n\n  handlePersonChange = (personID) => {\n    // const letterInPath = this.props.history.location.pathname.match(/\\/letter\\/[0-9]+/);\n    // this.props.history.push(`/person/${personID}/show${letterInPath}`);\n    this.props.history.push(`/person/${personID}/show`);\n  };\n\n  render () {\n    const { firstName, lastName, personID } = this.props;\n    const fullName = [firstName, lastName].join(' ');\n\n    return (\n      <span className=\"person\" dangerouslySetInnerHTML={{__html: fullName}} onClick={() => { this.handlePersonChange(personID) }}/>\n    );\n  }\n}\n\nexport default Person;","import React from \"react\";\nimport Person from '../Person/Person';\nimport { Route } from 'react-router-dom';\n\nclass Group extends React.Component {\n  render() {\n\n    const { people, correspondent } = this.props;\n    const group = [];\n    const preposition = correspondent === 'sender' ? 'from' : 'to';\n    let groupElement = '';\n\n    if (people) {\n      let x = 0;\n      for (let person of people) {\n        x++;\n        /**\n         * The person ID is not in the JSON response from the web service and\n         * must be isolated\n         */\n        let personIDMatch = person.Webpage.match(/[0-9]+$/);\n        let personID = personIDMatch[0];\n        /**\n         * This condition is necessary because of a naming inconsistency in the\n         * web service, and because JSON is case sensitive. Senders have a\n         * 'First name', receivers a 'First Name'. Ugh.\n         */\n        if (correspondent === 'receiver') {\n          group.push(\n            <Route key={x} path=\"/\" render={props => <Person {...props} personID={personID} firstName={person['First Name']} lastName={person['Last Name']} />} />,\n            ', '\n          );\n        }\n        else if (correspondent === 'sender') {\n          group.push(\n            <Route key={x} path=\"/\" render={props => <Person {...props} personID={personID} firstName={person['First name']} lastName={person['Last name']} />} />,\n            ', '\n          );\n        }\n      }\n    }\n\n    // Removes last array item [', ']\n    group.pop();\n\n    const groupClass = group.length > 1 ? 'multiple' : 'single';\n\n    if (group.length > 0) {\n      groupElement = <span className={groupClass}>{preposition} {group}</span>;\n    }\n\n    return (\n      <span className={correspondent}>{groupElement} </span>\n    );\n  }\n}\n\nexport default Group","import React from \"react\";\nimport NiceDate from '../../NiceDate/NiceDate';\n\nclass LetterVersion extends React.Component {\n  render() {\n\n    const type = this.props.type;\n    const version = this.props.version;\n    const updated = this.props.version['Version last updated'];\n    const numberOfVersions = this.props.numberofversions;\n    const number = this.props.number;\n\n    /**\n     * Convert URL's to links. Total rip-off from somewhere on the internet.\n     */\n    function URLToLink(text) {\n      const exp = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#/%?=~_|!:,.;]*[-A-Z0-9+&@#/%=~_|])/ig;\n      const text1 = text.replace(exp, \"<a href='$1'>$1</a>\");\n      let exp2 =/(^|[^/])(www\\.[\\S]+(\\b|$))/gim;\n      return (text1.replace(exp2, '$1<a href=\"http://$2\">$2</a>'));\n    }\n\n    /**\n     * Handle missing text and/or publishing permission\n     */\n\n    let content = `There is registered a version of the letter of the type <em>${this.props.type}</em>. Unfortunately, it may not be published here due to copyright issues. You may try to contact the owner.`;\n\n    if (version.Public === 'true') {\n      content = typeof version.Text !== 'undefined' && version.Text !== ''\n        ? URLToLink(version.Text)\n        : 'There is no text or description of this version of the letter. However, the information about the source may be useful:'\n    }\n\n    // Create version header\n    const versionHeader = [type];\n    // If it is a text, and there is more than one version\n    if (numberOfVersions > 1 && type === 'text') {\n      versionHeader.push(\n        <span className=\"metasuffix\" key={number}> (version {number})</span>\n      );\n    }\n\n    /**\n     * Get and add meta information\n     * Todo: add keys that make you look smart\n     */\n\n    const meta = [];\n\n    if (version['Source name']) {\n      meta.push(\n        <p key=\"1\">Source/owner: {version['Source name']}</p>\n      );\n\n      if(version['Item number in source']) {\n        meta.push(\n          <p key=\"2\">Item number in source: {version['Item number in source']}</p>\n        );\n      }\n    }\n\n    meta.push(\n      <p key=\"3\">Last updated on <NiceDate date={updated} format={\"compact\"} /></p>\n    );\n\n    /**\n     * Language(s)\n     * Languages is an array, as a letter may contain passages in multiple\n     * languages. There should be added a language attribute to the element\n     * holding the letter content, as it is very often in a foreign language.\n     * The first entry in the array will be used. That will be correct in most\n     * cases.\n     *\n     * The language codes are in ISO 639-2 and must be replaced with ISO 639-1\n     * values. The translation list in `ISOMap` contains the currently used\n     * languages in the letter database (2 March, 2018).\n     */\n\n    const language = this.props.version.Languages[0];\n    const ISOMap = {\n      eng: 'en',\n      dut: 'nl',\n      fre: 'fr',\n      spa: 'es',\n      ger: 'de',\n      ita: 'it',\n      swe: 'sv',\n      dan: 'da',\n      hca: 'da' // proprietary lang value for Danish at Andersen's time\n    };\n    const replace = new RegExp(Object.keys(ISOMap).join('|'),'gi');\n    const lang = language.replace(replace, (matched) => ISOMap[matched]);\n\n    /**\n     * Output\n     */\n    const letterClasses = `letter-version ${this.props.type}`;\n\n    return(\n      <div className={letterClasses}>\n        <h3 className=\"version-header\">{versionHeader}</h3>\n        <div className=\"letter-text\" lang={lang} dangerouslySetInnerHTML={{__html: content}} />\n        <div className=\"letter-meta\">{meta}</div>\n      </div>\n    );\n  }\n}\n\nexport default LetterVersion;","import React from \"react\";\n\nclass References extends React.Component {\n  render() {\n\n    const references = [];\n\n    let x=0;\n    for (let reference of this.props.references) {\n      const itemTitle = reference['Item title'];\n      const URL = reference['Webpage'];\n      let itemNotes = '';\n      if (reference['Comment on reference']) {\n        itemNotes = <span className=\"reference-comment\">{reference['Comment on reference']}</span>;\n      }\n\n      x++;\n      references.push(\n        <li className=\"literature\" key={x}>\n          <a className=\"literature-title\" href={URL}>{itemTitle}</a>\n          {itemNotes}\n        </li>\n      );\n    }\n\n    return(\n      <ul>{references}</ul>\n    );\n  }\n}\n\nexport default References;","import React, { Component } from 'react';\nimport { connect } from 'react-refetch';\n// import Error from '../Error/Error';\nimport { Route } from 'react-router-dom';\nimport Group from '../People/Group/Group';\nimport NiceDate from '../NiceDate/NiceDate';\nimport LetterVersion from '../Letter/LetterVersion/LetterVersion';\nimport References from '../Letter/References/References';\n\n/**\n * It is possible to hook into the defaults of connect and then wrap\n * the component in question with `refetch` instead of `connect` in order to\n * set the request.mode to no-cors. Like this:\n *\n * const refetch = connect.defaults({ mode: 'no-cors' });\n *\n * It does not matter much, though. It is only necessary on URL's that do not\n * return a letter anyway, but a 204 No Content.\n */\n\n\nclass DisplayLetter extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleLetterIDChange = this.handleLetterIDChange.bind(this);\n  }\n\n  handleLetterIDChange(letterID, letterDrawerIsOpen) {\n    // console.log(typeof this.props.onLetterIDChange);\n    this.props.onLetterIDChange(letterID, letterDrawerIsOpen);\n  }\n\n  render () {\n    const  { letter, open } = this.props;\n    const letterID = letter['Letter ID'];\n    const senders = letter.Senders;\n    const receivers = letter.Receivers;\n    const letterDate = letter['Letter date'];\n    const versions = letter.Versions;\n    const numberOfVersions = versions.length;\n    const references = letter['Bibliography references'];\n    const letterHeader = [];\n    const letterContent = [];\n    /**\n     * Create an object to hold the versions. The object is used as a kind of\n     * associative array. The key order maps to the the rendering order\n     * of version types; first text versions, then originals, and so on.\n     *\n     * @type {{text: Array, original: Array, image: Array, other: Array}}\n     */\n    const content = {\n      text: [],\n      original: [],\n      image: [],\n      other: []\n    };\n\n    /**\n     * Create letter header displaying sender(s), receiver(s) and the date\n     */\n\n    if (senders.length > 0) {\n      letterHeader.push(\n        <Group key=\"group1\" correspondent=\"sender\" people={senders}/>\n      );\n    }\n\n    if (receivers.length > 0) {\n      letterHeader.push(\n        <Group key=\"group2\" correspondent=\"receiver\" people={receivers}/>\n      );\n    }\n\n    if (letterDate) {\n      letterHeader.push(\n        <NiceDate key=\"3\" date={letterDate}/>\n      );\n    }\n\n    /**\n     * Iterate through versions object values\n     */\n    for (let version of versions) {\n\n      // Adds versions to their respective type's arrays in the versions object\n      switch (version.Type) {\n        case 'tekst':\n          content.text.push(version);\n          break;\n        case 'original':\n          content.original.push(version);\n          break;\n        case 'grafisk':\n          content.image.push(version);\n          break;\n        default:\n          content.other.push(version);\n      }\n    }\n\n    for (let [type, versions] of Object.entries(content)) {\n      if (versions.length > 0) {\n        let x = 1;\n        versions.forEach((letter) => {\n          letterContent.push(\n            <LetterVersion\n              type={type}\n              version={letter}\n              numberofversions={numberOfVersions}\n              number={x}\n              key={type + x}\n            />\n          );\n          x++;\n        });\n      }\n    }\n\n    return (\n      <section className={`letter drawer ${open}`}>\n        <div className=\"drawer-inner\">\n          <h2 className=\"letter-header\">\n            <i className=\"icon close-left\" onClickCapture={() => { this.handleLetterIDChange(letterID, false) }} />\n            <span>Letter</span>\n            {' '}\n            {letterHeader}\n          </h2>\n          {letterContent}\n          <div className=\"letter-references\">\n            <h3>Letter ID for reference: {letterID}</h3>\n            { references.length > 0 &&\n            <div>\n              <h3>References to sources and secondary literature for this letter</h3>\n              <References references={references}/>\n            </div>\n            }\n            </div>\n        </div>\n      </section>\n    );\n  }\n}\n\n\nclass Letter extends Component {\n\n  render() {\n  const { fetch, open, onLetterIDChange } = this.props;\n\n    if (fetch.pending) {\n      return <p className=\"fetch-message\">Fetching a letter with the selected ID. Please wait...</p>\n    } else if (fetch.rejected || (fetch.fulfilled && fetch.value === null)) {\n      // return <Error error={fetch.reason}/>\n      return <p className=\"fetch-message\">An error occurred. Or, more likely, there is no letter with the ID {this.props.url.match.params.letterID}.</p>\n    } else if (fetch.fulfilled && fetch.value !== null) {\n      return <Route render={(props) => <DisplayLetter history={props.history} letter={fetch.value} open={open} onLetterIDChange={onLetterIDChange} />} />\n    }\n  }\n}\n\nconst API = 'https://andersen.sdu.dk/service/letters/';\n\nexport default connect(props => ({\n  onLetterIDChange: props.onLetterIDChange,\n  open: props.open,\n  fetch: {\n    url: `${API}${props.url.match.params.letterID}?htmlencode=false`,\n    headers: {\n      'Content-Type': ''\n    }\n  }\n}))(Letter)\n","import React, {Component} from 'react';\nimport './Submit.css';\n\nclass Submit extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleClickSubmit = this.handleClickSubmit.bind(this);\n  }\n\n  handleClickSubmit(letterID, open) {\n    this.props.history.push(`/letter/${letterID}`);\n    this.props.onLetterIDChange(letterID, open);\n  }\n\n  render() {\n    const { isActive, letter } = this.props;\n    return (\n      <button\n        type=\"button\"\n        onClick={() => this.handleClickSubmit(letter, true)}\n        disabled={isActive ? '' : 'disabled'}\n      >Show me</button>\n    );\n  }\n}\n\nexport default Submit;","import React from 'react';\nimport { connect } from 'react-refetch';\nimport NiceDate from '../../NiceDate/NiceDate';\n\nconst PersonMetaData = (props) => {\n\n  const { info } = props;\n  const name = [];\n\n  if (info['First name'] !== null && info['First name'] !== '') {\n    name.push(info['First name']);\n  }\n\n  if (info['Last name'] !== null && info['Last name'] !== '') {\n    name.push(info['Last name']);\n  }\n\n  const bio = [];\n  const infoKeys = [\n    'Title',\n    'Biographical description',\n    'Family relations',\n  ];\n\n  for (let key of infoKeys) {\n    if (info[key] !== null && info[key] !== '') {\n      bio.push(\n        <span key={key} dangerouslySetInnerHTML={{__html: info[key]}} />,\n        ', '\n      );\n    }\n  }\n  // Removes last array item [', ']\n  bio.pop();\n\n  const timeAndNationality = [];\n  if (info['Born'] !== null) {\n    timeAndNationality.push (\n      '* ',\n      <NiceDate key=\"Born\" date={info['Born']} format=\"compact\" />,\n    );\n  }\n  if (info['Born'] !== null && info['Died'] !== null) {\n    timeAndNationality.push(', ')\n  }\n  if (info['Died'] !== null) {\n    timeAndNationality.push (\n      '† ',\n      <NiceDate key=\"Died\" date={info['Died']} format=\"compact\" />\n    );\n  }\n  if (info['Home country'] !== null && info['Home country'] !== '') {\n    if (timeAndNationality.length > 0) {\n      timeAndNationality.push (', ');\n    }\n    timeAndNationality.push (\n      info['Home country'],\n      '.'\n    )\n  }\n\n  return (\n    <section className=\"person-card\" lang=\"da\">\n      <h2 className=\"name\">{name.join(' ')}</h2>\n      <p className=\"time-and-nationality\">{timeAndNationality.length > 0 ? timeAndNationality : ''}</p>\n      <p className=\"curriculum\">{bio}</p>\n      <span className=\"note\">These data are only available in Danish</span>\n    </section>\n  );\n};\n\nconst Biography = (props) => {\n\n  const { fetch } = props;\n\n  if (fetch.pending) {\n    return <p className=\"fetch-message\">Fetching information about the selected person. Please wait...</p>\n  } else if (fetch.rejected || (fetch.fulfilled && fetch.value === null)) {\n    // return <Error error={fetch.reason}/>\n    return <p className=\"fetch-message\">An error occurred. Or, more likely, there is no person in the database with the ID {props.match.params.personID}.</p>\n  } else if (fetch.fulfilled && fetch.value !== null) {\n    return <PersonMetaData info={fetch.value}/>\n  }\n};\n\n\nconst API = 'https://andersen.sdu.dk/service/people/';\n\nexport default connect(props => ({\n  fetch: {\n    url: `${API}${props.match.params.personID}?htmlencode=false`,\n    headers: {\n      'Content-Type': ''\n    }\n  }\n}))(Biography)\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport './App.css';\nimport PersonSelect from './PersonSelect/PersonSelect';\nimport IDInput from './IDInput/IDInput';\nimport DateValidator from './DateValidator/DateValidator';\nimport LetterListWrapper from './LetterList/LetterListWrapper';\nimport Letter from './Letter/Letter'\nimport Submit from './Submit/Submit';\nimport Biography from './People/Biography/Biography';\n\n\nclass HCALetterApp extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      person: null,\n      year: null,\n      month: null,\n      day: null,\n      letterID: '',\n      letterIDButtonIsActive: false,\n      letterDrawerIsOpen: true,\n      onlineStatus: 'online',\n    };\n\n    this.handlePersonChange = this.handlePersonChange.bind(this);\n    this.handleLetterIDChange = this.handleLetterIDChange.bind(this);\n    this.handleKeyboardEvent = this.handleKeyboardEvent.bind(this);\n    this.handleOnlineStatusChange = this.handleOnlineStatusChange.bind(this);\n  }\n\n  handlePersonChange(person) {\n    this.setState({ person: person });\n\n    const letterInPath = this.props.history.location.pathname.match(/letter\\/[0-9]+/);\n    const pathExtension = [];\n\n    if (person && person.value !== '') {\n      pathExtension.push(`person/${person.value}`);\n      if (letterInPath !== null) {\n        pathExtension.push(`${letterInPath}`);\n      }\n    }\n    else if (letterInPath !== null) {\n      pathExtension.push(`${letterInPath}`);\n    }\n\n    this.props.history.push(`/${pathExtension.join('/')}`);\n  }\n\n  handleDateChange(datePart, value) {\n\n    this.setState({ person: null })\n    let pathParts = {\n      year: {\n        value: this.state.year,\n        pathPart: 'year',\n      },\n      month: {\n        value: this.state.month,\n        pathPart: 'month',\n      },\n      day: {\n        value: this.state.day,\n        pathPart: 'day',\n      }\n    };\n\n    pathParts[datePart].value = value;\n\n    const pathArray = [];\n\n    for (let path of Object.values(pathParts)) {\n      if (path.value && path.value.value) {\n        pathArray.push (\n          `/${path.pathPart}/${path.value.value}`\n        );\n      }\n    }\n    const letterInPath = this.props.history.location.pathname.match(/\\/letter\\/[0-9]+/);\n    pathArray.push(letterInPath);\n    const path = `/date${pathArray.join('')}`;\n    this.props.history.push(path);\n  }\n\n  handleLetterIDChange(letterID, letterDrawerIsOpen=true) {\n    this.setState({ letterID: letterID, letterDrawerIsOpen: letterDrawerIsOpen });\n    this.setState({letterIDButtonIsActive: letterID !== ''});\n  }\n\n  handleKeyboardEvent(keyBoardEvent) {\n    // If the user hits Enter and the ID input field is not empty\n    if (keyBoardEvent === 'Enter' && this.state.letterID !== '') {\n      this.setState({ letterDrawerIsOpen: true });\n      this.props.history.push(`/letter/${this.state.letterID}`);\n    }\n  }\n\n  handleOnlineStatusChange(onlineStatus) {\n    this.setState({ onlineStatus: onlineStatus });\n  }\n\n  render() {\n\n    const { person, year, month, day } = this.state;\n    const personValue = person && person.value;\n    const yearValue = year && year.value;\n    const monthValue = month && month.value;\n    const dayValue = day && day.value;\n\n    return (\n      <section className=\"App\">\n        <header className={this.props.location.pathname === '/' ? 'front' : 'not-front'}>\n          <h1 onClick={() => this.props.history.push('/')}>The Hans Christian Andersen Letters</h1>\n\n          {this.state.onlineStatus === 'offline' ? <p className=\"error\">You seem to be offline.</p> : ''}\n\n          <Tabs\n            defaultFocus={false}\n            defaultIndex={0}\n          >\n            <TabList>\n              <Tab><i className=\"tab-icon\" id=\"icon-person\"/><span className=\"tab-text\">Person</span></Tab>\n              <Tab><i className=\"tab-icon\" id=\"icon-id\"/><span className=\"tab-text\">ID</span></Tab>\n            </TabList>\n\n            <TabPanel>\n              <div className=\"selector\">\n                <PersonSelect person={person} personValue={personValue} onPersonChange={this.handlePersonChange} onOnlineStatusChange={this.handleOnlineStatusChange} />\n              </div>\n\n              {/* Render about-text only at \"/\" */}\n              <Route exact path=\"/\" render={() =>\n                <div className=\"help\">\n\n                <div className=\"error\" style={{ textAlign: 'left' }}>\n                  <h2>\n                    Bad news:\n                  </h2>\n                  <p>\n                    The web service at https://andersen.sdu.dk/service/ fails to deliver data needed by this app.\n                  </p>\n                  <p>\n                    It is thus not possible to search/browse/filter letters by date anymore, not here nor on the website <a href=\"https://andersen.sdu.dk/brevbase/\">https://andersen.sdu.dk/brevbase/</a> itself, among other issues.\n                  </p>\n                  <p>\n                    Until these problems get solved, this app is reduced to picking letters by ID and seeing the dropdown with people. The dropdown is filtered by typing in the field, so it is a fine way to at least find people. Unfortunately, selecting a person does not display a list of letters as it used to. Again, the error is to be fixed at https://andersen.sdu.dk.\n                  </p>\n                </div>\n\n                  <h2>What This App Lets You Do</h2>\n                  <p>This app lets you browse more than 10,000 letters to, from, and about <a href=\"https://en.wikipedia.org/wiki/Hans_Christian_Andersen\">Hans Christian Andersen</a>.</p>\n                  <p>You can <del>select a person or a date (range) or</del> enter an ID of a letter, if you should know one.</p>\n                  <p>You can filter the lists (person<del>, day, month, and year</del>) by entering text/numbers into the fields.</p>\n                  <p>The content comes from <a href=\"https://andersen.sdu.dk/brevbase/\" hrefLang=\"da\">the HCA research centre at the SDU</a> and is fetched via <a href=\"https://andersen.sdu.dk/service/index_e.html\">their web services</a>.</p>\n                  <p>You can return to this page and have the help texts displayed by clicking the header.</p>\n                  <p>The app is created by <a href=\"https://larsbojensen.eu\">Lars Bo Jensen</a>. It is based on <a href=\"https://reactjs.org/\">React</a> and Facebook's <a href=\"https://github.com/facebook/create-react-app\">create-react-app</a>. And sweat.</p>\n                  <p>Get the code at <a href=\"https://github.com/LarsBoJensen/hca-letters\">https://github.com/LarsBoJensen/hca-letters</a>.</p>\n                </div>\n              }/>\n            </TabPanel>\n            <TabPanel>\n              <Route path=\"/\" children={({ history }) => (\n                <div className={`id-input-wrapper selector${this.state.letterIDButtonIsActive ? ' is-active' : ''}`}>\n                  <IDInput letterID={this.state.letterID} onLetterIDChange={this.handleLetterIDChange} onKeyboardEvent={this.handleKeyboardEvent} history={history} />\n                  <Submit isActive={this.state.letterIDButtonIsActive} letter={this.state.letterID} history={history} onLetterIDChange={this.handleLetterIDChange} />\n                </div>\n              )} />\n\n              <Route exact path=\"/\" render={() =>\n                <div className=\"help\">\n                  <h2>Getting a letter by ID</h2>\n                  <p>The letter ID's have found their way into printed literature, so it is not entirely unthinkable that you might know one. Enter it here and get the letter.</p>\n                  <p>Please notice that the ID's are not an unbroken sequence of numbers. The ID's do not start at 1, and there are many 'empty slots'.</p>\n                </div>\n              }/>\n\n            </TabPanel>\n          </Tabs>\n        </header>\n\n        <Route path=\"*/letter/:letterID\" render={(match) => <Letter url={match} open={this.state.letterDrawerIsOpen ? 'open' : 'closed'} onLetterIDChange={this.handleLetterIDChange} />\n        } />\n\n        <Route path=\"/person/:personID/show\" component={Biography} />\n\n        <Switch>\n          <Route path=\"/person/:person\" render={(props) => <LetterListWrapper {...props} onLetterIDChange={this.handleLetterIDChange} />} />\n          <Route path=\"/date/year/:year/month/:month/day/:day\" render={(props) => <LetterListWrapper {...props} onLetterIDChange={this.handleLetterIDChange} />} />\n          <Route path=\"/date/year/:year/month/:month\" render={(props) => <LetterListWrapper {...props} onLetterIDChange={this.handleLetterIDChange} />} />\n        </Switch>\n\n      </section>\n    );\n  }\n}\n\nexport default HCALetterApp;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport HCALetterApp from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst supportsHistory = 'pushState' in window.history;\n\nReactDOM.render((\n    <BrowserRouter basename=\"/hca-letters\" forceRefresh={!supportsHistory}>\n      <Route path=\"/\" component={HCALetterApp} />\n    </BrowserRouter>\n  ),\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}